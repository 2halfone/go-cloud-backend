version: '3.8'

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - auth-service
      - user-service
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # --- Database per i log di autenticazione ---
  auth-db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: auth_admin
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_logs_db
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - microservices-net

  # --- Auth Service (aggiornato con database) ---
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      # stringa di connessione al nuovo PostgreSQL
      AUTH_DATABASE_URL: postgres://auth_admin:auth_password@auth-db:5432/auth_logs_db?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - auth-db
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - gateway
    networks:
      - microservices-net
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"    # interfaccia web http
      - "9443:9443"    # interfaccia web https (opzionale, puoi esporre solo la 9000)
    restart: unless-stopped
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  portainer_data:
    driver: local
  auth_db_data:
    driver: local
